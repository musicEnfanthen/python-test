name: Python Build

on:
  workflow_dispatch: # manual trigger
  push:
    # Trigger the workflow on push,
    # but only for the branches specified
    branches:
      # Push events on develop branch
      - main

env:
  CIBW_BUILD_IDENTIFIER: ''

jobs:
  build_wheels_manually:
    name: Build wheels (${{ matrix.python-version }}, ${{ matrix.os }}-${{ matrix.architecture }})
    runs-on: ${{ matrix.os }}
    strategy:
      # Ensure that a wheel builder finishes even if another fails
      fail-fast: false
      # Build the wheels for Linux, Windows and macOS for Python 3.6 and newer
      matrix:
        os: [ windows-latest, ubuntu-latest, macos-latest ]
        python-version: [ 3.9 ] # [3.6, 3.7, 3.8, 3.9]
        architecture: [ x86, x64 ]
        include:
          # Run 32 and 64 bit version in parallel for Linux and Windows
          - os: windows-latest
            architecture: x64
          - os: windows-latest
            architecture: x86
        exclude:
          - os: ubuntu-latest
            architecture: x64
          - os: macos-latest
            architecture: x64
          - os: ubuntu-latest
            architecture: x86
          - os: macos-latest
            architecture: x86

        
    steps:
      - uses: actions/checkout@v2
        with:
          repository: musicEnfanthen/verovio
          ref: ci-test

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          architecture: ${{ matrix.architecture }}
      
      - name: Verify Python version
        run: python -c "import sys; print(sys.version)"
  
      #===============================================#
      # SWIG
      #===============================================#
      - name: Install swig on Windows
        if: runner.os == 'Windows'
        run: choco install swig -f -y
          
      - name: Install swig on macOs
        if: runner.os == 'macOS'
        run: |
          brew update
          brew install swig
    
      - name: Install swig on Linux
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update -q
          sudo apt-get install swig
      
      - name: Verify swig
        run: swig -version
      #===============================================#
  
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine check-wheel-contents wheel-inspect

         
      #===============================================#
      # WHEELS
      #===============================================#
      - name: Build ext
        run: python setup.py build_ext

      - name: Build bdist wheel
        run: python setup.py bdist_wheel
 
      - name: List result
        run: ls -R
      - name: Check with Twine
        working-directory: dist
        run: twine check *.whl
    #  - name: "Check with check-wheel-contents"
    #    if: always() && runner.os != 'Windows'
    #    working-directory: dist
    #    run: check-wheel-contents *.whl --ignore W002
      - name: Check with wheel-inspect
        if: always() && runner.os != 'Windows'
        working-directory: dist
        run: wheel2json *.whl

      # Wildcard use is different with PowerShell
      # cf. https://stackoverflow.com/a/43900040
      - name: Check wheel installation on Windows
        if: always() && runner.os == 'Windows'
        working-directory: dist
        run: |
          pip install (get-item .\*.whl).FullName
          python -c "import verovio; tk = verovio.toolkit(); tk.getVersion()"
      
      - uses: actions/upload-artifact@v2
        if: always()
        with:
          name: ${{ runner.os }}-python-${{ matrix.python-version }}
          path: dist/*.whl

  build_cibuildwheels:
    name: Build ciwheels (${{ matrix.python-version }}, ${{ matrix.platform_id }})
    runs-on: ${{ matrix.os }}
    strategy:
      # Ensure that a wheel builder finishes even if another fails
      fail-fast: false
      # Build the wheels for Linux, Windows and macOS for Python 3.6 and newer
      matrix:
        os: [ windows-latest, ubuntu-latest, macos-latest ]
        python-version: [ 3.9 ] # [3.6, 3.7, 3.8, 3.9]
        architecture: [ x86, x64 ]
       # platform_id: [win_amd64, win32, manylinux_x86_64, manylinux_i686, macosx_x86_64]
        include:
          # Run 32 and 64 bit version in parallel for Linux and Windows
          - os: windows-latest
            architecture: x64
            platform_id: win_amd64
          - os: windows-latest
            architecture: x86
            platform_id: win32
          - os: ubuntu-latest
            architecture: x64
            platform_id: manylinux_x86_64
          - os: macos-latest
            architecture: x64
            platform_id: macosx_x86_64 
        exclude:
          - os: ubuntu-latest
            architecture: x86
         #   platform_id: manylinux_i686
       
          - os: macos-latest
            architecture: x86
        
    steps:
      - uses: actions/checkout@v2
        with:
          repository: musicEnfanthen/verovio
          ref: ci-test

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          architecture: ${{ matrix.architecture }}
      
      - name: Verify Python version
        run: python -c "import sys; print(sys.version)"
      
      - name: Install dependencies
        run: |
            python -m pip install --upgrade pip
            pip install cibuildwheel==1.7.1 twine

      #===============================================#
      # WHEELS
      #===============================================#
      - name: Set CIBW_BUILD_IDENTIFIER
        shell: bash
        run: |
          # Remove dot from python-version for CIBW and prefix with cp
          id=cp$(echo ${{ matrix.python-version }} | sed -e 's/\.//g')-${{ matrix.platform_id }}
          echo CIBW_BUILD_IDENTIFIER=$id >> $GITHUB_ENV
      
      - name: Check CIBW_BUILD_IDENTIFIER
        shell: bash
        run: echo ${{ env.CIBW_BUILD_IDENTIFIER }}
        
      - name: Get Build Identifier
        run: python -m cibuildwheel --print-build-identifiers
    
      - name: Build wheels
        env:
          CIBW_BUILD: ${{ env.CIBW_BUILD_IDENTIFIER }}
          CIBW_BEFORE_ALL_LINUX: |
            if [[ ! -e $(command -v swig) ]]; then
              curl -L https://sourceforge.net/projects/swig/files/swig/swig-4.0.2/swig-4.0.2.tar.gz/download --output /tmp/swig.tar.gz
              mkdir /tmp/swig
              tar -xvzf /tmp/swig.tar.gz -C /tmp/swig --strip-components 1 &> /dev/null
              pushd /tmp/swig
              ./configure --without-alllang --with-python3 && make -j2 && make install > /dev/null
              popd
            fi
          CIBW_BEFORE_ALL_MACOS: brew update && brew install swig
          CIBW_BEFORE_ALL_WINDOWS: choco upgrade chocolatey -y && choco install swig -f -y && choco upgrade all -y
          CIBW_BEFORE_BUILD: swig -version
          CIBW_MANYLINUX_X86_64_IMAGE: manylinux2014
        run: python -m cibuildwheel --output-dir wheelhouse

      - name: "List result"
        run: ls -R

      - name: Check with Twine
        working-directory: wheelhouse
        run: twine check *.whl

      # Wildcard use is different with PowerShell
      # cf. https://stackoverflow.com/a/43900040
      - name: Check wheel installation on Windows
        if: always() && runner.os == 'Windows'
        working-directory: wheelhouse
        run: |
          pip install (get-item .\*.whl).FullName
          python -c "import verovio; tk = verovio.toolkit(); tk.getVersion()"
     
      - uses: actions/upload-artifact@v2
        with:
          name: cibuildwheel-${{ runner.os }}-python-${{ matrix.python-version }}
          path: ./wheelhouse/*.whl  
